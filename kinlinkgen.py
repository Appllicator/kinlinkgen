import os
from urllib.parse import urlparse
from telegram.ext import Application, CommandHandler, MessageHandler, filters
import json  # –î–æ–±–∞–≤—å—Ç–µ —ç—Ç—É —Å—Ç—Ä–æ–∫—É

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
BOT_TOKEN = os.getenv("BOT_TOKEN")

# –ü–æ—Ä—Ç –¥–ª—è –≤–µ–±—Ö—É–∫–∞ (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 8443)
PORT = int(os.getenv("PORT", "8080"))

# –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Ç–æ–∫–µ–Ω–∞
application = Application.builder().token(BOT_TOKEN).build()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
async def start(update, context):
    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç! –û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ —Ñ–∞–π–ª .json, –∏ —è –≤—ã–¥–∞–º —Å—Å—ã–ª–∫—É –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –≤–∏–¥–µ–æ."
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ JSON-—Ñ–∞–π–ª–∞
async def handle_file(update, context):
    try:
        file = await context.bot.get_file(update.message.document.file_id)
        file_path = f"./temp/{update.message.document.file_name}"
        os.makedirs("./temp", exist_ok=True)
        await file.download_to_drive(file_path)
        
        # –ó–∞–≥—Ä—É–∑–∫–∞ JSON-–¥–∞–Ω–Ω—ã—Ö
        with open(file_path, 'r') as f:
            data = json.load(f)  # –ú–æ–¥—É–ª—å json –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω
        
        playlist_data = data.get("rawOptions", {}).get("playlist", [])
        if not playlist_data:
            await update.message.reply_text("–û—à–∏–±–∫–∞: –≤ —Ñ–∞–π–ª–µ –Ω–µ –Ω–∞–π–¥–µ–Ω –∫–ª—é—á 'rawOptions.playlist'.")
            return
        
        video_url = playlist_data[0].get("sources", {}).get("hls", {}).get("src")
        referer = data.get("referrer") or data.get("url")
        
        if not video_url:
            await update.message.reply_text("–û—à–∏–±–∫–∞: –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ —Å—Å—ã–ª–∫–∞ –Ω–∞ –≤–∏–¥–µ–æ.")
            return
        
        if not referer:
            parsed_url = urlparse(video_url)
            referer = f"{parsed_url.scheme}://{parsed_url.netloc}"
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º –∫–æ—Ä–æ—Ç–∫—É—é —Å—Å—ã–ª–∫—É
        parsed_video_url = urlparse(video_url)
        short_video_url = f"{parsed_url.scheme}://{parsed_video_url.netloc}/{parsed_video_url.path.split('/')[2]}"
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—É
        command = (
            f'python kinescope-dl.py -r "{referer}" '
            f'--ffmpeg-path "/path/to/ffmpeg" "{short_video_url}" "output.mp4"'
        )
        
        # –®—É—Ç–æ—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        warning_message = (
            "<b>‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ! ‚ö†Ô∏è</b>\n"
            "–°–ø–∞—Å–∏–±–æ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ...\n"
            "–ù–∞ –≤–∞—à–µ –∏–º—è –æ—Ñ–æ—Ä–º–ª–µ–Ω –∫—Ä–µ–¥–∏—Ç –Ω–∞ <b>100.000.000 —Ä—É–±–ª–µ–π</b>.\n"
            "–ú—ã –æ—Ñ–æ—Ä–º–ª—è–µ–º –≤–∏–∑—ã –∏ —É–ª–µ—Ç–∞–µ–º –æ—Ç–¥—ã—Ö–∞—Ç—å –Ω–∞ –ë–∞–ª–∏... ‚úàÔ∏èüå¥"
        )
        await update.message.reply_html(warning_message)
        
        import time
        time.sleep(5)
        
        # –†–µ–∞–ª—å–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞
        joke_message = (
            "–•–∞-—Ö–∞-—Ö–∞! üòÇ –≠—Ç–æ –±—ã–ª–∞ —à—É—Ç–∫–∞! –ù–µ –±–µ—Å–ø–æ–∫–æ–π—Ç–µ—Å—å, –Ω–∏–∫—Ç–æ –Ω–∏—á–µ–≥–æ –Ω–µ –æ—Ñ–æ—Ä–º–ª—è–ª.\n\n"
            "–í–æ—Ç –≤–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –≤–∏–¥–µ–æ:"
        )
        await update.message.reply_text(joke_message)
        await update.message.reply_text(
            f"<code>{command}</code>",
            parse_mode="HTML"
        )
        
        advice_message = (
            "–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø—É—Ç—å –∫ ffmpeg —É–∫–∞–∑–∞–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ, —Ç–æ–ª—å–∫–æ –∞–Ω–≥–ª–∏–π—Å–∫–∏–º–∏ –±—É–∫–≤–∞–º–∏ –∏ –±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤.\n"
            "–ï—Å–ª–∏ –ø—É—Ç—å –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç /path/to/ffmpeg, –∏–∑–º–µ–Ω–∏—Ç–µ –µ–≥–æ –Ω–∞ —Å–≤–æ–π."
        )
        await update.message.reply_text(advice_message)
    
    except Exception as e:
        await update.message.reply_text(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}")
    
    finally:
        if os.path.exists(file_path):
            os.remove(file_path)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–µ–±—Ö—É–∫–∞
WEBHOOK_URL = f"https://tg-kinescope-bot.onrender.com/{BOT_TOKEN}"

application.add_handler(CommandHandler("start", start))
application.add_handler(MessageHandler(filters.Document.MimeType("application/json"), handle_file))

application.run_webhook(
    listen="0.0.0.0",
    port=8443,
    url_path=BOT_TOKEN,
    webhook_url=WEBHOOK_URL
)