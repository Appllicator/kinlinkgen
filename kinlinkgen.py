import json
import os
from time import sleep
from telegram import Bot, Update
from telegram.ext import Application, CommandHandler, MessageHandler, filters, CallbackContext

# –¢–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ –±–æ—Ç–∞
BOT_TOKEN = "8178971092:AAHabpY9ZrdJ85T9CO96TMDO_G7zfMxQpIg"

# –ü—É—Ç—å –¥–ª—è –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤
TEMP_DIR = "./temp"
if not os.path.exists(TEMP_DIR):
    os.makedirs(TEMP_DIR)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
import logging
logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.INFO)
logger = logging.getLogger(__name__)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
async def start(update: Update, context: CallbackContext):
    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç! –û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ —Ñ–∞–π–ª .json, –∏ —è –≤—ã–¥–∞–º —Å—Å—ã–ª–∫—É –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –≤–∏–¥–µ–æ.\n"
        "–°–∫–æ–ø–∏—Ä—É–π—Ç–µ –ø–æ–ª—É—á–µ–Ω–Ω—É—é –∫–æ–º–∞–Ω–¥—É –∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –µ—ë —Å kinescope-dl.py."
    )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–ª—É—á–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
async def handle_file(update: Update, context: CallbackContext):
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Ñ–∞–π–ª –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        file = await context.bot.get_file(update.message.document.file_id)
        file_path = os.path.join(TEMP_DIR, update.message.document.file_name)
        await file.download_to_drive(file_path)
        logger.info(f"File received from user {update.effective_user.id}: {file_path}")

        # –ß–∏—Ç–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞
        with open(file_path, 'r') as f:
            data = json.load(f)

        # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ JSON
        url = data.get("url", "").strip()
        referer = data.get("referrer", "").strip()

        if not url:
            await update.message.reply_text("–û—à–∏–±–∫–∞: –Ω–µ –Ω–∞–π–¥–µ–Ω –∫–ª—é—á 'url' –∏–ª–∏ –æ–Ω –ø—É—Å—Ç–æ–π.")
            return

        # –ï—Å–ª–∏ —Ä–µ—Ñ–µ—Ä–µ—Ä –ø—É—Å—Ç–æ–π, –∏—Å–ø–æ–ª—å–∑—É–µ–º URL
        if not referer:
            referer = url

        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—É—Ç—å –∫ ffmpeg.exe
        ffmpeg_path = r"C:\ffmpeg\bin\ffmpeg.exe"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Å–≤–æ–π –ø—É—Ç—å

        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–º—è –≤—ã—Ö–æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
        output_file = "output.mp4"

        # –§–æ—Ä–º–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—É –¥–ª—è kinescope-dl.py
        command = (
            f'python kinescope-dl.py -r "{referer}" '
            f'--ffmpeg-path "{ffmpeg_path}" "{url}" "{output_file}"'
        )

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —à—É—Ç–æ—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        warning_message = (
            "<b>‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ! ‚ö†Ô∏è</b>\n"
            "–°–ø–∞—Å–∏–±–æ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ...\n"
            "–ù–∞ –≤–∞—à–µ –∏–º—è –æ—Ñ–æ—Ä–º–ª–µ–Ω –∫—Ä–µ–¥–∏—Ç –Ω–∞ <b>100.000.000 —Ä—É–±–ª–µ–π</b>.\n"
            "–ú—ã –æ—Ñ–æ—Ä–º–ª—è–µ–º –≤–∏–∑—ã –∏ —É–ª–µ—Ç–∞–µ–º –æ—Ç–¥—ã—Ö–∞—Ç—å –Ω–∞ –ë–∞–ª–∏... ‚úàÔ∏èüå¥"
        )
        await update.message.reply_html(warning_message)

        # –ñ–¥—ë–º 5 —Å–µ–∫—É–Ω–¥
        sleep(5)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ç–æ–º, —á—Ç–æ —ç—Ç–æ –±—ã–ª–∞ —à—É—Ç–∫–∞
        joke_message = (
            "–•–∞-—Ö–∞-—Ö–∞! üòÇ –≠—Ç–æ –±—ã–ª–∞ —à—É—Ç–∫–∞! –ù–µ –±–µ—Å–ø–æ–∫–æ–π—Ç–µ—Å—å, –Ω–∏–∫—Ç–æ –Ω–∏—á–µ–≥–æ –Ω–µ –æ—Ñ–æ—Ä–º–ª—è–ª.\n\n"
            "–í–æ—Ç –≤–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –≤–∏–¥–µ–æ:"
        )
        await update.message.reply_text(joke_message)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≥–æ—Ç–æ–≤—É—é –∫–æ–º–∞–Ω–¥—É
        await update.message.reply_text(
            f"<code>{command}</code>",
            parse_mode="HTML"
        )

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–≤–µ—Ç –ø–æ –ø—É—Ç–∏ –∫ ffmpeg
        advice_message = (
            "‚ö†Ô∏è <b>–í–∞–∂–Ω–æ:</b> –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É ffmpeg.exe —É–∫–∞–∑–∞–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ, —Ç–æ–ª—å–∫–æ –∞–Ω–≥–ª–∏–π—Å–∫–∏–º–∏ –±—É–∫–≤–∞–º–∏ –∏ –±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤.\n"
            "–ï—Å–ª–∏ –ø—É—Ç—å –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç C:\\\\ffmpeg\\\\bin\\\\ffmpeg.exe, –∏–∑–º–µ–Ω–∏—Ç–µ –µ–≥–æ –Ω–∞ —Å–≤–æ–π.\n\n"
            "–ù–∞–ø—Ä–∏–º–µ—Ä: --ffmpeg-path \"D:\\tools\\ffmpeg\\bin\\ffmpeg.exe\""
        )
        await update.message.reply_html(advice_message)

    except Exception as e:
        logger.error(f"Error processing file for user {update.effective_user.id}: {str(e)}")
        await update.message.reply_text(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}")

    finally:
        # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
        if os.path.exists(file_path):
            os.remove(file_path)

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
def main():
    application = Application.builder().token(BOT_TOKEN).build()

    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    application.add_handler(CommandHandler("start", start))
    application.add_handler(MessageHandler(filters.Document.MimeType("application/json"), handle_file))

    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    application.run_polling(allowed_updates=Update.ALL_TYPES)

if __name__ == "__main__":
    main()